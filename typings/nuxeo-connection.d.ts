/**
 * DO NOT EDIT
 *
 * This file was automatically generated by
 *   https://github.com/Polymer/tools/tree/master/packages/gen-typescript-declarations
 *
 * To modify these typings, edit the source file(s):
 *   nuxeo-connection.html
 */

// tslint:disable:variable-name Describing an API that's defined elsewhere.
// tslint:disable:no-any describes the API as best we are able today

/// <reference path="nuxeo-element.d.ts" />

declare namespace Nuxeo {
  /**
   * `nuxeo-connection` wraps a `nuxeo.Client`.
   *
   *     <nuxeo-connection
   *       id="nx_connection"
   *       url="http://demo.nuxeo.com"
   *       username="Administrator"
   *       password="Administrator">
   *     </nuxeo-connection>
   *
   * Note: Elements that depend on a connectionId use `nx` as default.
   */
  class Connection extends Nuxeo.Element {
    /**
     *  Returns true if client is connected.
     *
     */
    readonly connected: any;

    /**
     * Returns true if there are active requests.
     */
    readonly active: any;

    /**
     * A unique identifier for this connection.
     */
    connectionId: string | null | undefined;

    /**
     * The base URL of the Nuxeo server.
     */
    url: string | null | undefined;

    /**
     * The repository name.
     */
    repositoryName: string | null | undefined;

    /**
     * The username.
     */
    username: string | null | undefined;

    /**
     * The password.
     */
    password: string | null | undefined;

    /**
     * The current user entity
     */
    readonly user: object | null | undefined;

    /**
     * The platform version
     */
    readonly platformVersion: string | null | undefined;
    ready(): void;

    /**
     * Connects nuxeo client.
     */
    connect(): any;
    _handleConnected(nuxeo: any): any;

    /**
     * Returns a request object that allows REST requests to be executed on a Nuxeo Platform instance.
     */
    request(): any;

    /**
     * Returns an operation object that allows operations to be executed on a Nuxeo Platform instance.
     *
     * @param op The operation to be executed.
     */
    operation(op: string): any;

    /**
     * Get the http resource.
     *
     * @param url The url to be loaded.
     */
    http(url: string): any;

    /**
     * Returns an object that allows blobs to be uploaded to a Nuxeo Platform instance using the Batch Upload API.
     */
    batchUpload(): any;
  }
}

interface HTMLElementTagNameMap {
  'nuxeo-connection': Nuxeo.Connection;
}
