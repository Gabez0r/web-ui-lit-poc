/**
 * DO NOT EDIT
 *
 * This file was automatically generated by
 *   https://github.com/Polymer/tools/tree/master/packages/gen-typescript-declarations
 *
 * To modify these typings, edit the source file(s):
 *   nuxeo-operation.html
 */

// tslint:disable:variable-name Describing an API that's defined elsewhere.
// tslint:disable:no-any describes the API as best we are able today

/// <reference path="nuxeo-element.d.ts" />
/// <reference path="nuxeo-connection.d.ts" />
/// <reference path="nuxeo-page-provider.d.ts" />

declare namespace Nuxeo {
  /**
   * `nuxeo-operation` allows calling an operation on a Nuxeo server.
   *
   *     <nuxeo-operation auto
   *                      op="Document.Query"
   *                      params='{"query": "select * from Document"}'
   *                      on-response="handleResponse"
   *                      enrichers="documentURL, preview"></nuxeo-operation>
   *
   * With `auto` set to `true`, the operation is executed whenever
   * its `url` or `params` properties are changed.
   *
   * Note: The `params` attribute must be double quoted JSON.
   *
   * You can trigger an operation explicitly by calling `execute` on the
   * element.
   */
  class Operation extends Nuxeo.Element {
    /**
     * The id of a nuxeo-connection to use.
     */
    connectionId: string | null | undefined;

    /**
     * The success response status
     */
    success: boolean | null | undefined;

    /**
     * The error response status
     */
    error: string | null | undefined;

    /**
     * The id the operation to call.
     */
    op: string | null | undefined;

    /**
     * The parameters to send.
     */
    params: object | null | undefined;

    /**
     * The operation input.
     */
    input: object | null | undefined;

    /**
     * If true, automatically execute the operation when either `op` or `params` changes.
     */
    auto: boolean | null | undefined;

    /**
     * The response from the server.
     */
    response: object | null | undefined;

    /**
     * The headers of the request.
     */
    headers: object | null | undefined;

    /**
     * The `content enricher` of the resource.
     * Can be an object with entity type as keys or list or string with the entity type defined by
     * `enrichers-entity`.
     */
    enrichers: object | null | undefined;

    /**
     * The `content enricher` entity-type of the resource. Default value for Nuxeo Document Model
     */
    enrichersEntity: string | null | undefined;

    /**
     * List of comma separated values of the document schemas to be returned.
     * All document schemas are returned by default.
     */
    schemas: string | null | undefined;

    /**
     * Active request count.
     */
    readonly activeRequests: number | null | undefined;

    /**
     * If true, documents changed by the call will be reindexed synchronously server side.
     */
    syncIndexing: boolean | null | undefined;

    /**
     * True while requests are in flight.
     */
    readonly loading: boolean | null | undefined;

    /**
     * If true, execute the operation asynchronously.
     */
    async: boolean | null | undefined;

    /**
     * Poll interval in ms.
     */
    pollInterval: number | null | undefined;

    /**
     * Fired when the operation returns with no errors.
     */
    execute(): any;
    _autoExecute(): void;
    _doExecute(input: any, params: any, options: any): any;
    _poll(url: any): any;
    _isLoading(): void;
  }
}

interface HTMLElementTagNameMap {
  'nuxeo-operation': Nuxeo.Operation;
}
